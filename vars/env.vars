#
# WARNING: Do _NOT_ use whitespaces (` ') or tab (`	')
# characters in any of the variables below save for MAKEFLAGS,
# PATH, and TIMESTAMP_FMT.
#
# $PREFIX_{CROSS,NATIVE} and $WORKDIR must be immediately
# beneath $PREFIX. $PREFIX must be o+rwx. The variables mentioned
# should not be forward slash-terminated.
#

# Path names & variables
: ${PREFIX_ROOT:=${HOME}/midipix};
: ${PREFIX:=${PREFIX_ROOT}/${ARCH}/${BUILD}};
: ${PREFIX_MINIPIX:=${PREFIX}/minipix};
: ${PREFIX_NATIVE:=${PREFIX}/native};
: ${PREFIX_CROSS:=${PREFIX}/${TARGET}};
: ${DLCACHEDIR:=${PREFIX_ROOT}/dlcache};
: ${WORKDIR:=${PREFIX}/tmp};
: ${BUILD_STEPS:="all:all
	fetch_distclean:variant fetch_wget:dynamic fetch_git:dynamic fetch_extract:dynamic fetch_subdirs:invariant fetch:virtual
	configure_patch_pre:dynamic configure_autotools:dynamic configure_patch:dynamic configure:dynamic
	build_clean:variant build:dynamic
	install_subdirs:dynamic install_make:dynamic install_files:dynamic install_libs:dynamic
	install_pkgconfig:dynamic install_purge_la:dynamic install_strip:dynamic install:dynamic
	finish:finish"};
: ${PKG_BUILD_VARS:="BASE_DIR BUILD_DIR BUILD_STEPS_DISABLE BUILD_TYPE
	CFLAGS_BUILD_EXTRA CFLAGS_CONFIGURE CFLAGS_CONFIGURE_EXTRA
	CFLAGS_INSTALL_EXTRA CONFIG_CACHE CONFIG_CACHE_EXTRA CONFIGURE CONFIGURE_ARGS
	CONFIGURE_ARGS_EXTRA CXXFLAGS_CONFIGURE_EXTRA DISABLED
	ENV_VARS_EXTRA INSTALL_FILES INSTALL_TARGET INSTALL_TARGET_EXTRA
	LDFLAGS_BUILD_EXTRA LDFLAGS_CONFIGURE LDFLAGS_CONFIGURE_EXTRA
	LDFLAGS_INSTALL_EXTRA MAKE_INSTALL_VNAME MAKEFLAGS_BUILD
	MAKEFLAGS_BUILD_EXTRA MAKEFLAGS_INSTALL MAKEFLAGS_INSTALL_EXTRA
	NO_LOG_VARS SHA256SUM SLIBTOOL SUBDIR TARGET URL URL_TYPE URLS_GIT VERSION"};
: ${CLEAR_ENV_VARS_EXCEPT:="ARG_VERBOSE ARG_VERBOSE2 ARG_VERBOSE3 DEFAULT_GITROOT_HEAD HOME PATH SHELL TERM TARBALL_SIGN_GPG_KEY USER"};
: ${CLEAR_PREFIX_DIRS:="bin i686-nt32-midipix doc include info lib lib64 libexec man minipix native sbin share tmp usr x86_64-nt64-midipix x86_64-w64-mingw32"};

# Default flags
: ${DEFAULT_BUILD_CPUS:=1};
: ${DEFAULT_CFLAGS_DEBUG:="-g2 -O0"};
: ${DEFAULT_CFLAGS_DEBUG_HOST:="-g0 -O2"};
: ${DEFAULT_CFLAGS_DEBUG_RUNTIME:="-g3 -O0"};
: ${DEFAULT_CFLAGS_RELEASE:="-g0 -O2"};
: ${DEFAULT_CFLAGS_RELEASE_HOST:="-g0 -O2"};
: ${DEFAULT_CFLAGS_RELEASE_RUNTIME:="-g0 -O2"};
: ${DEFAULT_CFLAGS:=$(ex_get_var_unsafe "DEFAULT_CFLAGS_$(ex_toupper "${BUILD}")")};
: ${DEFAULT_CFLAGS_CONFIGURE:=${DEFAULT_CFLAGS}};
: ${DEFAULT_CFLAGS_HOST:=$(ex_get_var_unsafe "DEFAULT_CFLAGS_$(ex_toupper "${BUILD}")_HOST")};
: ${DEFAULT_CFLAGS_RUNTIME:=$(ex_get_var_unsafe "DEFAULT_CFLAGS_$(ex_toupper "${BUILD}")_RUNTIME")};
: ${DEFAULT_GITROOT:=git://midipix.org};
: ${DEFAULT_GITROOT_HEAD:=git://midipix.org};
: ${DEFAULT_MAKE_INSTALL_VNAME:=DESTDIR};
: ${DEFAULT_MAKEFLAGS_BUILD:=-j${DEFAULT_BUILD_CPUS}};
: ${DEFAULT_WGET_ARGS:="--no-check-certificate"};

# Build {log,status} & tarball names
: ${BUILD_LOG_FNAME:=${PREFIX}/build.log};
: ${BUILD_LOG_LAST_FNAME:=${PREFIX}/build.log.last};
: ${BUILD_STATUS_IN_PROGRESS_FNAME:=${PREFIX}/BUILD_IN_PROGRESS};
: ${LOG_ENV_VARS:="HOME PATH SHELL USER GITROOT ARCH BUILD
	HOST_TOOLCHAIN_CFLAGS_CONFIGURE NATIVE_TOOLCHAIN_CFLAGS_CONFIGURE
	RUNTIME_CFLAGS_CONFIGURE LIB_PACKAGES_CFLAGS_CONFIGURE
	LEAF_PACKAGES_CFLAGS_CONFIGURE MINIPIX_CFLAGS_CONFIGURE
	PREFIX PREFIX_NATIVE PREFIX_CROSS WORKDIR"};
: ${LOG_MSG_FAIL_COLOUR:=91};
: ${LOG_MSG_INFO_COLOUR:=93};
: ${LOG_MSG_VNFO_COLOUR:=96};
: ${LOG_MSG_VVFO_COLOUR:=96};
: ${LOG_MSG_VVVO_COLOUR:=96};
: ${LOG_MSG_SUCC_COLOUR:=92};
: ${TARBALL_CROSS_FNAME_PREFIX:=midipix-${ARCH}-${BUILD}_cross.};
: ${TARBALL_FNAME_PREFIX:=midipix-${ARCH}-${BUILD}.};
: ${TARBALL_MINIPIX_FNAME_PREFIX:=minipix-${ARCH}-${BUILD}.};
: ${TARBALL_SIGN_GPG_KEY:=};
: ${TARBALL_SRC_FNAME_PREFIX:=midipix-${ARCH}-${BUILD}_src.};
: ${TARBALL_SUFFIX:=xz};
: ${TIMESTAMP_FMT:="%Y/%m/%d %H:%M:%S"};
: ${TIMESTAMP_FMT_STATUS_FILES:=%Y-%m-%d-%H-%M-%S};

# Check predicates
: ${CHECK_PREREQ_CMDS:="aclocal autoconf autopoint awk basename bunzip2 find flex gcc git groff gunzip install ld libtool lzma make makeinfo msgfmt nl nroff openssl paste patch python sed sha256sum sort tar tee tic tr uname wget xz"};
: ${CHECK_PREREQ_FILES:="/usr/include/gmpxx.h /usr/include/mpc.h /usr/include/mpfr.h"};
: ${CHECK_PREREQ_FILES_DYNAMIC:='/usr/share/groff/$(groff -v 2>/dev/null | awk '\''/^GNU groff version /{print $NF}'\'')/tmac/e.tmac'};
: ${CHECK_PREREQ_PERL_MODULES:="autodie ExtUtils::MakeMaker"};
: ${CHECK_PATH_VARS:="PREFIX PREFIX_NATIVE PREFIX_CROSS DLCACHEDIR WORKDIR"};
: ${CHECK_UPDATES_SKIP:="gmp mpfr mpc binutils binutils_host install_strip_host pkgconf_host psxtypes pemagine dalist ntcon ntapi psxscl psxscl_strace ntctty ptycon pkgconf libevent libressl"};
: ${CHECK_UPDATES_SHOW_NEW:=6};

# vim:filetype=sh textwidth=0
